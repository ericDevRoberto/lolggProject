package com.example.data.model.remote.response

data class GetMatchInfoResponse(
    val info: MatchInfoContact
)

data class MatchInfoContact(
    val gameType: String,
    val gameMode: String,
    val gameDuration: Int,
    val participants: List<MatchInfoParticipant>
)

data class MatchInfoParticipant(
    val assists: Int,
    val baronKills: Int,
    val bountyLevel: Int,
    val challenges: MatchInfoParticipantChallenges,
    val champExperience: Int,
    val champLevel: Int,
    val championId: Int,
    val championName: String,
    val championTransform: Int,
    val consumablesPurchased: Int,
    val damageDealtToBuildings: Int,
    val damageDealtToObjectives: Int,
    val damageDealtToTurrets: Int,
    val damageSelfMitigated: Int,
    val deaths: Int,
    val detectorWardsPlaced: Int,
    val doubleKills: Int,
    val dragonKills: Int,
    val firstBloodAssist: Boolean,
    val firstBloodKill: Boolean,
    val firstTowerAssist: Boolean,
    val firstTowerKill: Boolean,
    val gameEndedInEarlySurrender: Boolean,
    val gameEndedInSurrender: Boolean,
    val goldEarned: Int,
    val goldSpent: Int,
    val individualPosition: String,
    val inhibitorKills: Int,
    val inhibitorTakedowns: Int,
    val inhibitorsLost: Int,
    val item0: Int,
    val item1: Int,
    val item2: Int,
    val item3: Int,
    val item4: Int,
    val item5: Int,
    val item6: Int,
    val itemsPurchased: Int,
    val killingSprees: Int,
    val kills: Int,
    val lane: String,
    val largestCriticalStrike: Int,
    val largestKillingSpree: Int,
    val largestMultiKill: Int,
    val longestTimeSpentLiving: Int,
    val magicDamageDealt: Int,
    val magicDamageDealtToChampions: Int,
    val magicDamageTaken: Int,
    val neutralMinionsKilled: Int,
    val nexusKills: Int,
    val nexusLost: Int,
    val nexusTakedowns: Int,
    val objectivesStolen: Int,
    val objectivesStolenAssists: Int,
    val participantId: Int,
    val pentaKills: Int,
    val perks: MatchInfoPerks,
val physicalDamageDealt: Int,
val physicalDamageDealtToChampions: Int,
val physicalDamageTaken: Int,
val profileIcon: Int,
val puuid: String,
val quadraKills: Int,
val riotIdName: String,
val riotIdTagline: String,
val role: String,
val sightWardsBoughtInGame: Int,
val spell1Casts: Int,
val spell2Casts: Int,
val spell3Casts: Int,
val spell4Casts: Int,
val summoner1Casts: Int,
val summoner1Id: Int,
val summoner2Casts: Int,
val summoner2Id: Int,
val summonerId: String,
val summonerLevel: Int,
val summonerName: String,
val teamEarlySurrendered: Boolean,
val teamId: Int,
val teamPosition: String,
val timeCCingOthers: Int,
val timePlayed: Int,
val totalDamageDealt: Int,
val totalDamageDealtToChampions: Int,
val totalDamageShieldedOnTeammates: Int,
val totalDamageTaken: Int,
val totalHeal: Int,
val totalHealsOnTeammates: Int,
val totalMinionsKilled: Int,
val totalTimeCCDealt: Int,
val totalTimeSpentDead: Int,
val totalUnitsHealed: Int,
val tripleKills: Int,
val trueDamageDealt: Int,
val trueDamageDealtToChampions: Int,
val trueDamageTaken: Int,
val turretKills: Int,
val turretTakedowns: Int,
val turretsLost: Int,
val unrealKills: Int,
val visionScore: Int,
val visionWardsBoughtInGame: Int,
val wardsKilled: Int,
val wardsPlaced: Int,
val win: Boolean,
)

data class MatchInfoPerks(
    val statPerks: MatchInfoStatPerk,
    val styles: List<MatchInfoStylePerk>
)

data class MatchInfoStatPerk(
    val defense: Int,
    val flex: Int,
    val offense: Int,
)

data class MatchInfoStylePerk(
    val description: String,
    val selections: List<MatchInfoStylePerkSelection>,
    val style: Int,
)

data class MatchInfoStylePerkSelection(
    val perk: Int,
    val var1: Int,
    val var2: Int,
    val var3: Int,
)

data class MatchInfoParticipantChallenges(
    val `12AssistStreakCount`: Int,
    val abilityUses: Int,
    val acesBefore15Minutes: Int,
    val alliedJungleMonsterKills: Int,
    val baronTakedowns: Int,
    val blastConeOppositeOpponentCount: Int,
    val bountyGold: Int,
    val buffsStolen: Int,
    val controlWardsPlaced: Int,
    val damagePerMinute: Float,
    val damageTakenOnTeamPercentage: Float,
    val dancedWithRiftHerald: Int,
    val deathsByEnemyChamps: Int,
    val doubleAces: Int,
    val dragonTakedowns: Int,
    val earliestDragonTakedown: Float,
    val earlyLaningPhaseGoldExpAdvantage: Int,
    val effectiveHealAndShielding: Int,
    val elderDragonKillsWithOpposingSoul: Int,
    val elderDragonMultikills: Int,
    val enemyChampionImmobilizations: Int,
    val enemyJungleMonsterKills: Int,
    val epicMonsterKillsNearEnemyJungler: Int,
    val epicMonsterKillsWithin30SecondsOfSpawn: Int,
    val epicMonsterSteals: Int,
    val firstTurretKilledTime: Float,
    val flawlessAces: Int,
    val fullTeamTakedown: Int,
    val gameLength: Float,
    val getTakedownsInAllLanesEarlyJungleAsLaner: Int,
    val goldPerMinute: Float,
    val hadAfkTeammate: Int,
    val hadOpenNexus: Int,
    val initialBuffCount: Int,
    val initialCrabCount: Int,
    val jungleCsBefore10Minutes: Int,
    val junglerKillsEarlyJungle: Int,
    val junglerTakedownsNearDamagedEpicMonster: Int,
    val kda: Int,
    val killParticipation: Float,
    val killsNearEnemyTurret: Int,
    val killsOnLanersEarlyJungleAsJungler: Int,
    val killsOnOtherLanesEarlyJungleAsLaner: Int,
    val killsOnRecentlyHealedByAramPack: Int,
    val killsUnderOwnTurret: Int,
    val killsWithHelpFromEpicMonster: Int,
    val laneMinionsFirst10Minutes: Int,
    val laningPhaseGoldExpAdvantage: Int,
    val legendaryCount: Int,
    val lostAnInhibitor: Int,
    val maxCsAdvantageOnLaneOpponent: Int,
    val maxKillDeficit: Int,
    val maxLevelLeadLaneOpponent: Int,
    val moreEnemyJungleThanOpponent: Int,
    val mostWardsDestroyedOneSweeper: Int,
    val multiKillOneSpell: Int,
    val multikills: Int,
    val multikillsAfterAggressiveFlash: Int,
    val mythicItemUsed: Int,
    val outerTurretExecutesBefore10Minutes: Int,
    val outnumberedKills: Int,
    val outnumberedNexusKill: Int,
    val perfectDragonSoulsTaken: Int,
    val perfectGame: Int,
    val poroExplosions: Int,
    val riftHeraldTakedowns: Int,
    val scuttleCrabKills: Int,
    val skillshotsDodged: Int,
    val skillshotsHit: Int,
    val snowballsHit: Int,
    val soloBaronKills: Int,
    val soloKills: Int,
    val stealthWardsPlaced: Int,
    val survivedSingleDigitHpCount: Int,
    val takedownOnFirstTurret: Int,
    val takedowns: Int,
    val takedownsAfterGainingLevelAdvantage: Int,
    val takedownsBeforeJungleMinionSpawn: Int,
    val takedownsFirst25Minutes: Int,
    val takedownsInAlcove: Int,
    val takedownsInEnemyFountain: Int,
    val teamBaronKills: Int,
    val teamDamagePercentage: Float,
    val teamElderDragonKills: Int,
    val teamRiftHeraldKills: Int,
    val turretPlatesTaken: Int,
    val turretTakedowns: Int,
    val turretsTakenWithRiftHerald: Int,
    val twentyMinionsIn3SecondsCount: Int,
    val unseenRecalls: Int,
    val visionScoreAdvantageLaneOpponent: Float,
    val visionScorePerMinute: Float,
    val wardTakedowns: Int,
    val wardTakedownsBefore20M: Int,
    val wardsGuarded: Int,
)